"""Final db

Revision ID: 213ad827a51e
Revises: bb997e2c4ef4
Create Date: 2025-06-21 14:03:19.940746

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '213ad827a51e'
down_revision = 'bb997e2c4ef4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regioes_administrativas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('codigo', sa.String(length=10), nullable=False),
    sa.Column('endereco', sa.Text(), nullable=True),
    sa.Column('telefone', sa.String(length=15), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codigo')
    )
    op.create_table('agendas_medicos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('medico_id', sa.Integer(), nullable=False),
    sa.Column('dia_semana', sa.Integer(), nullable=False),
    sa.Column('hora_inicio', sa.Time(), nullable=False),
    sa.Column('hora_fim', sa.Time(), nullable=False),
    sa.Column('duracao_consulta', sa.Integer(), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['medico_id'], ['medicos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('horarios_medicos')
    with op.batch_alter_table('agendamentos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('consentimento', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('finalidade_dados', sa.String(length=200), nullable=True))

    with op.batch_alter_table('especialidades', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ativo', sa.Boolean(), nullable=True))
        batch_op.drop_column('ativa')

    with op.batch_alter_table('medicos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('regiao_administrativa_id', sa.Integer(), nullable=False))
        batch_op.alter_column('nome',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('especialidade_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_foreign_key(None, 'regioes_administrativas', ['regiao_administrativa_id'], ['id'])
        batch_op.drop_column('criado_em')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('medicos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('criado_em', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('especialidade_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('nome',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.drop_column('regiao_administrativa_id')

    with op.batch_alter_table('especialidades', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ativa', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_column('ativo')

    with op.batch_alter_table('agendamentos', schema=None) as batch_op:
        batch_op.drop_column('finalidade_dados')
        batch_op.drop_column('consentimento')

    op.create_table('horarios_medicos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medico_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('dia_semana', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('hora_inicio', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('hora_fim', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['medico_id'], ['medicos.id'], name='horarios_medicos_medico_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='horarios_medicos_pkey')
    )
    op.drop_table('agendas_medicos')
    op.drop_table('regioes_administrativas')
    # ### end Alembic commands ###
